{"version":3,"sources":["Sharesome/tests/app.jshint.js","Sharesome/tests/components/file-dropzone.jshint.js","Sharesome/tests/components/file-input.jshint.js","Sharesome/tests/components/history-item.jshint.js","Sharesome/tests/components/loading-spinner.jshint.js","Sharesome/tests/controllers/application.jshint.js","Sharesome/tests/controllers/history.jshint.js","Sharesome/tests/controllers/upload.jshint.js","Sharesome/tests/helpers/destroy-app.js","Sharesome/tests/helpers/destroy-app.jshint.js","Sharesome/tests/helpers/human-file-size.jshint.js","Sharesome/tests/helpers/module-for-acceptance.js","Sharesome/tests/helpers/module-for-acceptance.jshint.js","Sharesome/tests/helpers/resolver.js","Sharesome/tests/helpers/resolver.jshint.js","Sharesome/tests/helpers/start-app.js","Sharesome/tests/helpers/start-app.jshint.js","Sharesome/tests/initializers/remote-storage.jshint.js","Sharesome/tests/initializers/vex.jshint.js","Sharesome/tests/integration/components/history-item-test.js","Sharesome/tests/integration/components/history-item-test.jshint.js","Sharesome/tests/integration/components/loading-spinner-test.js","Sharesome/tests/integration/components/loading-spinner-test.jshint.js","Sharesome/tests/router.jshint.js","Sharesome/tests/routes/application.jshint.js","Sharesome/tests/routes/history.jshint.js","Sharesome/tests/routes/index.jshint.js","Sharesome/tests/services/remote-storage.jshint.js","Sharesome/tests/test-helper.js","Sharesome/tests/test-helper.jshint.js","Sharesome/tests/unit/initializers/remote-storage-test.js","Sharesome/tests/unit/initializers/remote-storage-test.jshint.js","Sharesome/tests/unit/initializers/vex-test.js","Sharesome/tests/unit/initializers/vex-test.jshint.js","Sharesome/tests/unit/services/remote-storage-test.js","Sharesome/tests/unit/services/remote-storage-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('Sharesome/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('Sharesome/tests/components/file-dropzone.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/file-dropzone.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/file-dropzone.js should pass jshint.');\n  });\n});","define('Sharesome/tests/components/file-input.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/file-input.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/file-input.js should pass jshint.');\n  });\n});","define('Sharesome/tests/components/history-item.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/history-item.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/history-item.js should pass jshint.');\n  });\n});","define('Sharesome/tests/components/loading-spinner.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/loading-spinner.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/loading-spinner.js should pass jshint.');\n  });\n});","define('Sharesome/tests/controllers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass jshint.');\n  });\n});","define('Sharesome/tests/controllers/history.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/history.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/history.js should pass jshint.');\n  });\n});","define('Sharesome/tests/controllers/upload.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/upload.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/upload.js should pass jshint.');\n  });\n});","define('Sharesome/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('Sharesome/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('Sharesome/tests/helpers/human-file-size.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/human-file-size.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/human-file-size.js should pass jshint.');\n  });\n});","define('Sharesome/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'Sharesome/tests/helpers/start-app', 'Sharesome/tests/helpers/destroy-app'], function (exports, _qunit, _SharesomeTestsHelpersStartApp, _SharesomeTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _SharesomeTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _SharesomeTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('Sharesome/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('Sharesome/tests/helpers/resolver', ['exports', 'ember/resolver', 'Sharesome/config/environment'], function (exports, _emberResolver, _SharesomeConfigEnvironment) {\n\n  var resolver = _emberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _SharesomeConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _SharesomeConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('Sharesome/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('Sharesome/tests/helpers/start-app', ['exports', 'ember', 'Sharesome/app', 'Sharesome/config/environment'], function (exports, _ember, _SharesomeApp, _SharesomeConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _SharesomeConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _SharesomeApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('Sharesome/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('Sharesome/tests/initializers/remote-storage.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - initializers/remote-storage.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/remote-storage.js should pass jshint.');\n  });\n});","define('Sharesome/tests/initializers/vex.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - initializers/vex.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/vex.js should pass jshint.');\n  });\n});","define('Sharesome/tests/integration/components/history-item-test', ['exports', 'ember', 'ember-qunit'], function (exports, _ember, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('history-item', 'Integration | Component | history item', {\n    integration: true\n  });\n\n  window.remoteStorage.shares = {\n    getThumbnailURL: function getThumbnailURL(name) {\n      return 'https://storage.kosmos.org/public/shares/thumbnails/' + name;\n    }\n  };\n\n  (0, _emberQunit.test)('it renders images', function (assert) {\n\n    var item = _ember['default'].Object.create({\n      name: 'foobar.jpg',\n      url: 'https://storage.kosmos.org/public/shares/foobar.jpg',\n      isDeleting: false\n    });\n    this.set('item', item);\n\n    // TODO\n    // stub remoteStorage.shares.getThumbnailURL(name);\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@1.13.12',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 26\n            }\n          }\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['inline', 'history-item', [], ['item', ['subexpr', '@mut', [['get', 'item', ['loc', [null, [1, 20], [1, 24]]]]], [], []]], ['loc', [null, [1, 0], [1, 26]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$('div.image').attr('style').match(/url\\((.+)\\)/)[1], 'https://storage.kosmos.org/public/shares/thumbnails/foobar.jpg');\n\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n  });\n});","define('Sharesome/tests/integration/components/history-item-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/history-item-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/history-item-test.js should pass jshint.');\n  });\n});","define('Sharesome/tests/integration/components/loading-spinner-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n  // import hbs from 'htmlbars-inline-precompile';\n\n  (0, _emberQunit.moduleForComponent)('loading-spinner', 'Integration | Component | loading spinner', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\" + EOL + EOL +\n\n    // TODO load spin.js somehow\n    // this.render(hbs`{{loading-spinner}}`);\n\n    // assert.equal(this.$('.spinner-wrapper').length, 1);\n\n    assert.ok(true);\n  });\n});","define('Sharesome/tests/integration/components/loading-spinner-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/components/loading-spinner-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/loading-spinner-test.js should pass jshint.');\n  });\n});","define('Sharesome/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('Sharesome/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('Sharesome/tests/routes/history.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/history.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/history.js should pass jshint.');\n  });\n});","define('Sharesome/tests/routes/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('Sharesome/tests/services/remote-storage.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - services/remote-storage.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/remote-storage.js should pass jshint.');\n  });\n});","define('Sharesome/tests/test-helper', ['exports', 'Sharesome/tests/helpers/resolver', 'ember-qunit'], function (exports, _SharesomeTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_SharesomeTestsHelpersResolver['default']);\n\n  window.vex = { defaultOptions: {} };\n  window.RemoteStorage = {\n    WireClient: {},\n    log: function log() {\n      return true;\n    }\n  };\n  window.remoteStorage = {};\n});","define('Sharesome/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('Sharesome/tests/unit/initializers/remote-storage-test', ['exports', 'ember', 'Sharesome/initializers/remote-storage', 'qunit'], function (exports, _ember, _SharesomeInitializersRemoteStorage, _qunit) {\n\n  var application = undefined,\n      container = undefined;\n\n  (0, _qunit.module)('Unit | Initializer | remote storage', {\n    beforeEach: function beforeEach() {\n      _ember['default'].run(function () {\n        application = _ember['default'].Application.create();\n        container = application.__container__;\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    _SharesomeInitializersRemoteStorage['default'].initialize(container, application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('Sharesome/tests/unit/initializers/remote-storage-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/initializers/remote-storage-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/remote-storage-test.js should pass jshint.');\n  });\n});","define('Sharesome/tests/unit/initializers/vex-test', ['exports', 'ember', 'Sharesome/initializers/vex', 'qunit'], function (exports, _ember, _SharesomeInitializersVex, _qunit) {\n\n  var application = undefined;\n\n  (0, _qunit.module)('Unit | Initializer | vex', {\n    beforeEach: function beforeEach() {\n      _ember['default'].run(function () {\n        application = _ember['default'].Application.create();\n        application.deferReadiness();\n      });\n    }\n  });\n\n  // Replace this with your real tests.\n  (0, _qunit.test)('it works', function (assert) {\n    _SharesomeInitializersVex['default'].initialize(application);\n\n    // you would normally confirm the results of the initializer here\n    assert.ok(true);\n  });\n});","define('Sharesome/tests/unit/initializers/vex-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/initializers/vex-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/initializers/vex-test.js should pass jshint.');\n  });\n});","define('Sharesome/tests/unit/services/remote-storage-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:remote-storage', 'Unit | Service | remote storage', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  window.remoteStorage.access = { claim: function claim() {\n      return true;\n    } };\n  window.remoteStorage.displayWidget = function () {\n    return true;\n  };\n  window.remoteStorage.on = function () {\n    return true;\n  };\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('Sharesome/tests/unit/services/remote-storage-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/services/remote-storage-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/remote-storage-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('sharesome/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}